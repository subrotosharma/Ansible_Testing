# Run the playbook with:
# ansible-playbook -i invfile Playbooks/vault_testing.yml -vv --ask-vault-pass

---
- name: Run AWS CLI Commands On All Servers
  hosts: pvt
  gather_facts: yes
  become: yes
  become_user: root
  serial: 3
  vars:
    user_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      38303132623738306339373531666437393130346136653330336332356236373963313061633963
      6462373238343432636634626563393333666661336463370a383937366238393735396133316631
      35373433313266656534383031633762386165666161373032303339626335356636616662363565
      3134636236613538300a636465333464323737653931316434303335636432386235343934313061
      6364

  tasks:
    - name: Install Required Packages (jq, passlib)
      package:
        name:
          - jq
          - python3-passlib
        state: present

    - name: Create .aws folder
      file:
        path: /root/.aws
        state: directory
        owner: root
        group: root
        mode: "0700"

    - name: Copy Encrypted Files to /tmp
      copy:
        src: "/tmp/{{ item }}"  # Ensure these files exist before running the playbook.
        dest: "/tmp/{{ item }}"
        owner: root
        group: root
        mode: "0600"
      loop:
        - aws_creds
        - tls.key
        - tls.crt

    - name: Copy AWS Credentials File to .aws folder
      copy:
        src: /tmp/aws_creds
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: "0600"

    - name: Check S3 Buckets
      command: aws s3 ls
      register: buckets

    - name: Print Bucket Names
      debug:
        msg: "{{ buckets.stdout_lines }}"

    - name: Get VPCs
      command: aws ec2 describe-vpcs | jq -r ".Vpcs[].VpcId"
      register: vpcs

    - name: Print VPC IDs
      debug:
        msg: "{{ vpcs.stdout_lines }}"

    - name: Create Admin Users
      user:
        name: "{{ item }}"
        state: present
        comment: "Admin User {{ item }}"
        groups: root
        shell: /bin/bash
        group: sudo
        password: "{{ user_password | regex_replace('\n', '') | password_hash('sha512') }}"
        password_expire_min: 1
      loop:
        - Avinash
        - Saikiran
        - Gnane

    - name: Enable Password Authentication in SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no"
        line: "PasswordAuthentication yes"
        backup: yes
      notify:
        - Restart SSH Service

  handlers:
    - name: Restart SSH Service
      service:
        name: sshd
        state: restarted

    - name: Restart Elastic Agent
      command: sudo heartbeat setup && sudo service heartbeat-elastic start
